<class 'torch.utils.data.dataloader.DataLoader'>
Batch 1:
Inputs:
tensor([[4.9533, 3.8689, 0.0000,  ..., 0.0000, 0.4330, 0.0000],
        [2.7398, 3.3978, 0.0000,  ..., 1.0286, 0.4005, 0.1375],
        [1.8440, 3.2645, 0.1635,  ..., 0.1110, 0.9486, 0.0704],
        ...,
        [1.8237, 3.3291, 0.4647,  ..., 0.2265, 0.4647, 0.1506],
        [4.8958, 1.4542, 5.5874,  ..., 0.1506, 1.3103, 0.0000],
        [1.4906, 0.1243, 0.1506,  ..., 6.8532, 6.6605, 0.0704]])
Labels:
tensor([[0.0000, 0.3448, 0.0000,  ..., 0.3896, 1.1506, 0.0000],
        [0.0000, 0.4005, 0.0000,  ..., 2.7485, 1.9298, 0.0000],
        [0.0000, 0.0000, 1.2449,  ..., 3.3547, 1.9672, 0.7908],
        ...,
        [0.5059, 1.0426, 1.5850,  ..., 1.8400, 3.4383, 0.7312],
        [1.3045, 0.2630, 1.5945,  ..., 7.6668, 2.3161, 0.9107],
        [0.3334, 0.3785, 1.8032,  ..., 0.0000, 2.5705, 0.2016]])
Batch 2:
Inputs:
tensor([[2.0215, 3.1424, 0.0426,  ..., 1.5059, 0.9107, 0.2265],
        [1.4542, 0.2265, 0.1243,  ..., 4.2280, 0.1375, 0.0000],
        [2.0976, 2.7115, 0.1763,  ..., 0.0000, 2.9317, 0.0000],
        ...,
        [2.1440, 3.6473, 0.0704,  ..., 0.0426, 1.0000, 0.1375],
        [1.8600, 4.2334, 0.2630,  ..., 0.0000, 3.2464, 0.0000],
        [2.1144, 5.0548, 0.6871,  ..., 0.0000, 2.9505, 0.0000]])
Labels:
tensor([[0.0000, 0.5261, 0.9336,  ..., 3.4647, 1.9298, 0.0000],
        [0.3219, 0.0000, 0.5361,  ..., 0.2750, 2.1763, 0.0000],
        [0.5059, 0.5361, 1.2079,  ..., 1.1440, 1.8480, 0.8156],
        ...,
        [0.0000, 0.0000, 0.8480,  ..., 3.3882, 2.4060, 0.0000],
        [0.0000, 0.0000, 2.3103,  ..., 5.3937, 1.7442, 0.0000],
        [1.0841, 0.0000, 0.1890,  ..., 1.7570, 2.2449, 0.5558]])
Batch 3:
Inputs:
tensor([[2.3813, 3.3909, 0.2750,  ..., 0.3334, 0.6871, 0.3674],
        [2.8258, 2.7027, 0.6229,  ..., 0.6415, 1.1570, 0.2016],
        [1.4222, 0.0704, 0.0286,  ..., 5.7509, 6.6809, 0.0000],
        ...,
        [1.7740, 4.0875, 0.4647,  ..., 0.0000, 3.3248, 0.0000],
        [1.9561, 3.2016, 0.0144,  ..., 0.0841, 0.9635, 0.2630],
        [2.0909, 4.0985, 0.0426,  ..., 0.0000, 3.1635, 0.0000]])
Labels:
tensor([[0.6599, 0.0000, 0.4330,  ..., 2.1922, 1.1177, 0.8953],
        [0.0000, 0.9928, 1.6462,  ..., 1.8560, 1.6229, 0.0000],
        [0.0000, 0.0000, 1.7740,  ..., 0.4005, 3.7027, 0.5361],
        ...,
        [0.0000, 0.6871, 1.1110,  ..., 4.9388, 1.7740, 0.7485],
        [0.4222, 0.0000, 0.7740,  ..., 1.7004, 1.6462, 0.0000],
        [0.0000, 0.3334, 0.5059,  ..., 4.5777, 1.9260, 0.0000]])
Batch 4:
Inputs:
tensor([[2.6253, 2.7991, 0.4005,  ..., 0.1243, 1.2016, 0.2510],
        [2.2357, 5.0496, 0.0286,  ..., 0.1635, 1.9449, 0.0000],
        [2.2570, 4.4777, 0.1635,  ..., 0.0704, 2.6871, 0.0000],
        ...,
        [1.8319, 2.2660, 0.0286,  ..., 0.0566, 0.5558, 0.1635],
        [2.5211, 4.4496, 0.2265,  ..., 0.0000, 1.2869, 0.2510],
        [0.6508, 0.2630, 0.0000,  ..., 0.0000, 0.1763, 0.1243]])
Labels:
tensor([[0.4330, 0.4222, 1.4330,  ..., 2.2720, 1.9709, 0.0000],
        [0.4330, 0.0000, 2.0144,  ..., 5.7863, 1.7225, 0.0000],
        [0.0000, 0.4436, 0.7049,  ..., 6.1595, 1.6462, 0.0000],
        ...,
        [0.4647, 0.4751, 1.4854,  ..., 2.4276, 2.0426, 0.0000],
        [0.0000, 0.0000, 1.0772,  ..., 1.7824, 1.8875, 0.3785],
        [0.5460, 0.1635, 1.0072,  ..., 0.0000, 0.7570, 0.2016]])
Batch 5:
Inputs:
tensor([[2.6439, 1.2690, 0.0000,  ..., 0.0000, 0.5850, 0.0000],
        [1.9411, 2.9069, 1.4383,  ..., 0.0000, 3.0976, 0.0000],
        [2.7203, 2.8053, 0.7570,  ..., 0.0426, 0.9635, 0.2987],
        ...,
        [2.2110, 3.4330, 0.4330,  ..., 0.2630, 2.1699, 0.0000],
        [2.0942, 3.1309, 0.0286,  ..., 0.0000, 0.6690, 0.0704],
        [2.4276, 1.8600, 0.9411,  ..., 0.0426, 2.3448, 0.0000]])
Labels:
tensor([[0.3674, 0.3561, 0.7824,  ..., 2.6276, 2.0356, 0.0000],
        [0.0000, 0.0000, 1.5753,  ..., 4.1432, 0.9260, 0.4222],
        [0.0000, 0.4854, 1.6182,  ..., 3.7093, 1.5311, 1.1243],
        ...,
        [0.0000, 0.0000, 0.7991,  ..., 3.2780, 2.0807, 0.6135],
        [0.4114, 1.4489, 0.0000,  ..., 4.5110, 2.8420, 0.3896],
        [0.0000, 0.0000, 0.8156,  ..., 5.8374, 1.4168, 0.0000]])

------------------------------------------------------------
Sender: LSF System <lsfadmin@hpc.dtu.dk>
Subject: Job 19711447: <VAE_23/11/30> in cluster <dcc> Done

Job <VAE_23/11/30> was submitted from host <hpclogin1> by user <s222498> in cluster <dcc> at Wed Dec  6 19:48:11 2023
Job was executed on host(s) <n-62-20-14>, in queue <gpuv100>, as user <s222498> in cluster <dcc> at Wed Dec  6 19:48:11 2023
</zhome/36/6/181069> was used as the home directory.
</zhome/36/6/181069/DL_project/deep_learning_project> was used as the working directory.
Started at Wed Dec  6 19:48:11 2023
Terminated at Wed Dec  6 20:19:39 2023
Results reported at Wed Dec  6 20:19:39 2023

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
#!/bin/sh

#BSUB -q gpuv100
#BSUB -gpu "num=1"
#BSUB -J VAE_23/11/30
#BSUB -n 1
#BSUB -W 10:00
#BSUB -R "rusage[mem=16GB]"
#BSUB -o Anu_pca.out
#BSUB -e Anu_pca.err

module load python3/3.11.4
module load h5py
python3 "pca.py"

------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   1753.10 sec.
    Max Memory :                                 10160 MB
    Average Memory :                             7692.13 MB
    Total Requested Memory :                     16384.00 MB
    Delta Memory :                               6224.00 MB
    Max Swap :                                   -
    Max Processes :                              4
    Max Threads :                                8
    Run time :                                   1893 sec.
    Turnaround time :                            1888 sec.

The output (if any) is above this job summary.



PS:

Read file <Anu_pca.err> for stderr output of this job.

